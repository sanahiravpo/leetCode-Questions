q:
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n))
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2
my  solution



/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number}
 */
var findMedianSortedArrays = function(nums1, nums2) {
    
    const mergedarray=[...nums1,...nums2];
    const sorted=mergedarray.sort((a,b)=>a-b);
    let length=sorted.length;
      let mid = Math.floor(length / 2);
     if(length%2==0){
            return (sorted[mid - 1] + sorted[mid]) / 2;
        }
        else
        {
         return sorted[mid];
         
        }
    

};
const result=findMedianSortedArrays([1,2],[3])
console.log(result);
